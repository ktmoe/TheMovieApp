apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'me.moallemi.advanced-build-version'

advancedVersioning {
    nameOptions {
        versionMajor 0
        versionMinor 0
        versionPatch 1
    }
    codeOptions {
        versionCodeType 'AUTO_INCREMENT_ONE_STEP'
    }
    outputOptions {
        renameOutput true
        nameFormat '${appName}-${buildType}-${versionName}'
    }
}

def appVersionName = advancedVersioning.versionName
def appVersionCode = advancedVersioning.versionCode

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.example.ktmmoe.themovieapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode appVersionCode
        versionName appVersionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String','API_KEY', "\"${paramApiData}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        flavorDimensions "appModule"
        def BASE_URL_FIELD = "BASE_URL_FIELD"
        def BASE_DEV_URL = "\"https://api.themoviedb.org/3/\""
        def BASE_PROD_URL = "\"https://api.themoviedb.org/3/\""
        def BASE_STAGING_URL = "\"https://api.themoviedb.org/3/\""

        dev {
            dimension "appModule"
            applicationIdSuffix = ".dev"
            manifestPlaceholders = [appName : "@string/my_app_name_dev"]
            buildConfigField 'String', BASE_URL_FIELD, BASE_DEV_URL
        }
        prod {
            dimension "appModule"
            applicationIdSuffix = ".prod"
            manifestPlaceholders = [appName : "@string/my_app_name_prod"]
            buildConfigField 'String', BASE_URL_FIELD, BASE_PROD_URL
        }
        staging {
            dimension "appModule"
            applicationIdSuffix = ".staging"
            manifestPlaceholders = [appName: "@string/my_app_name_staging"]
            buildConfigField 'String',BASE_URL_FIELD,BASE_STAGING_URL
        }
    }
}

dependencies {
    implementation project(":shared")
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'

    //GSON
    implementation rootProject.ext.libraries.gson

    //Retrofit
    implementation rootProject.ext.libraries.retrofit
    implementation rootProject.ext.libraries.retrofitGsonConverter
    implementation rootProject.ext.libraries.retrofitRxAdapter

    //RxKotlin
    implementation rootProject.ext.libraries.rxkotlin
    implementation rootProject.ext.libraries.rxandroid

    //OKHttp
    implementation rootProject.ext.libraries.okhttp
    implementation rootProject.ext.libraries.okhttpLogInterceptor

    implementation rootProject.ext.libraries.glide
    annotationProcessor rootProject.ext.libraries.glideCompiler
    implementation rootProject.ext.libraries.androidxLegacySupport

    //Swipe Refresh Layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"

    // LiveData
    implementation rootProject.ext.libraries.liveData

    // lifecycle components
    implementation rootProject.ext.libraries.lifecycleExtension
    kapt rootProject.ext.libraries.archLifecycleCompiler

    // Annotation processor
    kapt rootProject.ext.libraries.xlifecycleCompiler

    // Room
    implementation rootProject.ext.libraries.room
    kapt rootProject.ext.libraries.roomCompiler

    // Work Manager
    implementation rootProject.ext.libraries.workManager

    implementation rootProject.ext.libraries.androidMaterial
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //slider
    implementation 'com.github.smarteist:autoimageslider:1.3.2-appcompat'

    // Local Unit Tests
    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.test.ext:junit-ktx:1.1.1"
    testImplementation "androidx.test:core-ktx:1.2.0"
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.1"
    testImplementation "org.mockito:mockito-core:3.1.0"
    testImplementation "org.robolectric:robolectric:4.3.1"

    // Tests that require Android Device
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation "androidx.test:core-ktx:1.2.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.1"
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation "org.mockito:mockito-android:3.1.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"

    //youtube player
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:chromecast-sender:0.23'

    implementation 'com.android.support:multidex:2.0.1'
}